#page_content
  .container
    #project_review data-thank-you-path=project_backer_path(project_id: @project.id, id: @backer.id)
      .project_info
        = image_tag @project.display_image, id: 'project_image', alt: @project.name, width: '250px'
        h1= t('.you_are_about_html', link: link_to(@project.name, project_by_slug_path(permalink: @project.permalink)))
        #review_text
          - if @backer.reward
            .review_content
              = t('.review_with_reward_html', value: @backer.display_value)
            .reward
              = @backer.reward.description
          - else
            .review_content
              = t('.review_without_reward_html', value: @backer.display_value)
      .clearfix
      .title
        h1= t('.title')
        h2= t('.subtitle')
      .clearfix
      - if @backer.credits
        #back_with_credits
          .bootstrap-alert
            .alert
              #credits_notice= t('.credits_notice_html', credits: number_to_currency((current_user.credits - @backer.value), unit: 'R$', precision: 0, delimiter: '.'))
      .bootstrap-form
        = semantic_form_for current_user, url: credits_checkout_project_backer_path(@backer.project, @backer), html: { data: { update_info_path: update_info_project_backer_path(project_id: @backer.project.id, id: @backer.id) }, id: 'review_form', class: "form-horizontal #{('dont_align' if @backer.credits)}" } do |form|
          = hidden_field_tag 'project_id', @backer.project.id
          = hidden_field_tag 'backer_id', @backer.id
          = hidden_field_tag 'backer_credits', @backer.credits
          = hidden_field_tag 'payment_method_url', nil
          - unless @backer.credits
            = form.inputs do
              fieldset.live_in_brazil
                = check_box_tag 'live_in_brazil', 'live', params[:locale] == 'pt'
                = label_tag 'live_in_brazil', t('.live_in_brazil'), class: 'inline'
              = form.input :full_name, required: true, as: :string
              /= form.input :cpf, as: :string, input_html: {autocomplete: 'off'}
              = form.input :email, required: true, as: :string
              fieldset.address_data
                .title
                  h2
                = form.input :address_street, as: :string, required: true
                = form.input :address_number, as: :string, required: true
                = form.input :address_complement, required: false, as: :string
                = form.input :address_neighbourhood, as: :string, required: true
                = form.input :address_zip_code, as: :string, input_html: {autocomplete: 'off'}, required: true
                = form.input :address_city, as: :string, required: true
                = form.input :address_state, as: :select, collection: State.array, required: true
                = form.input :phone_number, as: :string, input_html: {autocomplete: 'off'}, required: true
          .submit
            fieldset.accept_terms
              = check_box_tag 'accept'
              = label_tag 'accept', t('accept_terms_html', link: link_to(t('terms'), t('footer.links.terms_link'), target: :_blank)), class: 'inline'
            - if @backer.credits
              = form.actions do
                .bootstrap-twitter
                  = form.submit (@backer.credits ? t('.submit.credits') : t('.submit.moip')), disabled: true, class: 'btn', id: 'user_submit'

        #payment.hide
          .title
            h1= t('.choose_payment')
            h2= t('.choose_payment_subtitle')

          .tab_container
            nav#payment_menu
              - PaymentEngines.engines.each do |engine|
                = link_to "##{engine[:name]}_payment", id: engine[:name], class: 'selected enabled' , data: {target: "##{engine[:name]}_payment"} do
                  = t("projects.backers.review.#{engine[:name]}")
          .tab_content_container
            - PaymentEngines.engines.each do |engine|
              div[id="#{engine[:name]}_payment" class="payments_type hide" data-path=engine[:review_path].call(@backer) ]
    .clearfix
