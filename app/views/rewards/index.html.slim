- collection.each do |reward|

  - if can?(:update, reward)
    .bootstrap-twitter.bootstrap-form
      .skull-modal.hide id="reward#{reward.id}Editor"
        .skull-modal-header
          h3= t('projects.rewards.edit_reward')
          a class='skull-modal-close' href='javascript:void(0);' &times;
        .skull-modal-body
          = image_tag 'loading.gif'


  div[id="reward_#{reward.id}" data-new_backer_url=new_project_backer_path(parent, reward_id: reward.id) data-update_url=sort_project_reward_path(parent, reward) class="box #{(can?(:update, reward) ? 'clickable_owner sortable' : '')} #{(parent.online? && !reward.sold_out? && !can?(:update, reward)  ? 'clickable'  : '' )}"]
    - if can?(:update, reward)
      .bootstrap-form.bootstrap-twitter id="reward#{reward.id}Editor"
        .bootstrap-twitter
          = link_to "javascript:void(0);", data: {target: "#reward#{reward.id}Editor", path: edit_project_reward_path(@project, reward)}, class: 'show_reward_form btn btn-mini pull-right btn-primary' do
            i.icon-pencil.icon-white

    h2= t('projects.rewards.reward_title', minimum: reward.display_minimum).html_safe
    em= pluralize(reward.backers.confirmed.count, t('backer_singular'), t('backer_plural'))
    .clearfix
    p
      = reward.display_description
    - if reward.maximum_backers
      .maximum_backers.clearfix
        - if reward.sold_out?
          .sold_out= t('reward.sold_out')
        - else
          .limited= t('reward.limited')
          .remaining
            = reward.display_remaining
      - in_time_to_confirm = reward.backers.in_time_to_confirm.count
      - if in_time_to_confirm > 0
        .maximum_backers.in_time_to_confirm.clearfix
          .pending= t('projects.rewards.backs_to_confirm', count: in_time_to_confirm)
      .clearfix
    - if reward.days_to_delivery.present?
      div class="reward_deliver_at"
        p= "#{t('projects.rewards.reward_deliver_time', prevision: reward.display_deliver_prevision)}".html_safe
    - if current_user && current_user.admin
      div class="reward_updated_at"
        p= "Modificado em: #{I18n.l(reward.updated_at.to_date)} #{parent.online_date.nil? ? '' : ((parent.online_date > reward.updated_at)? '(draft)' : '(online)')}"
      - if reward.has_modification?
        div class="description_version rewardVersioning#{reward.id}"
          p= reward.last_description
        .maximum_backers.in_time_to_confirm.clearfix
          .updated_reward
            span id="rewardVersioning#{reward.id}"
              = 'Veja a vers√£o anterior.'
.clearfix
