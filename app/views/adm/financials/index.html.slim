#page_content
  .container
    .title
      h1= t('.title')
      h2
        strong= "#{@total_projects} "
        = t('.total_projects')

    .filters
      .bootstrap-form
        = form_tag adm_financials_path, method: :get, class: 'form-horizontal' do |f|
          fieldset
            .input
              = label_tag :by_permalink, t('.permalink')
              = text_field_tag :permalink_equals, params[:permalink_equals], class: 'input-small'

            .input
              = label_tag :between_expires_at_start_at, t('.between_expires_at')
              = text_field_tag 'between_expires_at[start_at]', (params[:between_expires_at][:start_at] if params[:between_expires_at].present?), class: 'input-small'
              | &nbsp;
              | &nbsp;
              = text_field_tag 'between_expires_at[ends_at]', (params[:between_expires_at][:ends_at] if params[:between_expires_at].present?), class: 'input-small'
            .input
              = label_tag :by_progress, t('.by_progress')
              = text_field_tag :by_progress, params[:by_progress], class: 'input-small'
            .input
              = label_tag :name_contains, t('.project')
              = text_field_tag :name_contains, params[:name_contains]
            .input
              = label_tag :user_name_contains, t('.user')
              = text_field_tag :user_name_contains, params[:user_name_contains]
            .input
              = label_tag :by_state, t('.by_state')
              = select_tag :by_state, options_for_select(Project.state_names, params[:by_state]), include_blank: true
              = link_to t('.search_report'), adm_financials_path(params: params,format: :csv)
            .bootstrap-twitter
              .input.submit
                = submit_tag t('.submit'), class: 'btn btn-success'
          fieldset
            .input.total_results
              #total_results
                = pluralize_without_number @search.count, t('found_singular'), t('found_plural')
                strong= @search.count
                = pluralize_without_number(@search.count, t('project_singular'), t('project_plural')).downcase
      .clearfix
    .data-table
      = paginate @projects
      - if @projects.empty?
        = t('.no_backers')
      - else
        .bootstrap-twitter
          table.table.table-striped
            thead
              tr
                th style="width: 200px;"
                  = t('.name')
                th= t('.user')
                th= t('.goal')
                th= t('.pledged')
                th= t('.total_payment_service_fee')
                th= t('.total_catarse_fee')
                th= t('.repass_value')
                th= t('.expires_at')
                th= t('.reports')
                th= t('.state')
                th
            tbody
              - @projects.each do |project|
                tr id=project.id class=cycle("even", "odd")
                  td= link_to project.name, project_by_slug_path(permalink: project.permalink), target: '_blank'
                  td= link_to (project.user.moip_login.blank? ? 'NÃ£o preenchido' : project.user.moip_login), user_path(project.user, anchor: :settings), target: '_blank'
                  td= project.display_goal
                  td= project.display_pledged
                  td= number_to_currency project.total_payment_service_fee, unit: 'R$', precision: 2, delimiter: '.'
                  - catarse_fee = Configuration[:catarse_fee].to_f * project.pledged
                  td
                    = number_to_currency catarse_fee, unit: 'R$', precision: 2, delimiter: '.'
                  td
                    = number_to_currency ((project.pledged*0.87)), unit: 'R$', precision: 2, delimiter: '.'
                  td
                    = project.display_expires_at
                  td
                    = link_to t('.backer_report'), adm_reports_backer_reports_path(project_id: project.id, format: :csv)
                  td
                    - if project.online?
                      span.label.label-online= project.state
                    - elsif project.successful?
                      span.label.label-success= project.state
                    - elsif project.failed? or project.rejected?
                      span.label.label-important= project.state
                    - elsif project.waiting_funds?
                      span.label.label-warning= project.state
                    - else
                      span.label= project.state
      = paginate @projects
  .clearfix



