= render 'shared/header'
.row.admin.admin-backers
  h1
    = @title = t('channels.admin.management.title')
    ' :
  h3 = t('channels.admin.filter.title')
  = simple_form_for '', url: admin_backers_path, method: :get do |form|
    .row
      .large-2.columns
        = form.input :by_user_id, as: :integer, label: t('.user_id')
      .large-2.columns
        = form.input 'between_values[start_at]', as: :string, label: t(".between_values")
      .large-2.columns
        = form.input 'between_values[ends_at]', as: :string, label: ''
      .large-3.columns
        = form.input :payer_email_contains, as: :string, label: t('.payer_email')
      .large-3.columns
        = form.input :user_email_contains, as: :string, label: t('.user_email')
    .row
      .large-2.columns
        = form.input :with_state, collection: Backer.state_names, label: t('channels.admin.filter.with_state'), as: :select, selected: params[:with_state], include_blank: true
      .large-3.columns
        = form.input :project_name_contains, as: :string, label: t('.project')
      .large-2.columns
        = form.input :user_name_contains, as: :string, label: t('.user')
      .large-2.columns
        = form.input :by_key, as: :string, label: t('.key')
      .large-3.columns
    .row
      .large-2.large-offset-10.columns
        = form.button :submit, t('channels.admin.filter.submit'), class: 'button medium negative'

  = paginate @backers
  - if @backers.empty?
    = t('.no_backers')
  - else
    table.admin-backers
      thead
        tr
          th= t('.backer')
          th= t('.project')
          th= t('.user')
          th= t('.value')
          th= t('.reward')
          th= t('.key')
          th= t('.anonymous')
          th= t('.credits')
          th= t('.state')
          th
      tbody
        - @backers.includes(:project, :user, :reward).each do |backer|
          tr id=backer.id class=cycle("even", "odd")
            td
              = link_to backer.id, admin_backer_path(backer)
            td.project_info title=backer.project.name
              = link_to project_by_slug_path(permalink: backer.project.permalink) do
                = image_tag backer.project.display_image, class: 'project_img'
            td.user_info title=backer.user.display_name
              = link_to user_path(backer.user) do
                = image_tag backer.user.display_image, class: 'user_img'
              .user_id= best_in_place [:admin, backer], :user_id, method: :put, type: :input
            td= best_in_place [:admin, backer], :value, method: :put, type: :input
            td.reward.large-1.columns.project-events-dropdown title=("#{backer.reward.display_minimum} - #{backer.reward.description}" if backer.reward)
              - if backer.reward
                = backer.reward.display_minimum
              - else
                | -
              .btn-group
                = link_to 'javascript:void(0);', data: {toggle: 'dropdown'}, class: 'btn btn-mini dropdown-toggle' do
                  span.caret
                ul.dropdown
                  li title=("#{t('.no_reward')}" ) = link_to t('.no_reward'), change_reward_admin_backer_path(backer, reward_id: nil), method: :put
                  - backer.available_rewards.each do |reward|
                    li title=("#{reward.display_minimum} - #{reward.description}" ) = link_to reward.minimum_value, change_reward_admin_backer_path(backer, reward_id: reward.id, local_params: params), method: :put

            td.key= backer.key
            td.checkbox= best_in_place [:admin, backer], :anonymous, method: :put, type: :checkbox, collection: [t('no'), t('yes')]
            td= (backer.credits ? t('yes') : t('no'))
            td= backer.state
            td.large-1.columns.project-events-dropdown
              .btn-group
                = link_to 'javascript:void(0);', data: {toggle: 'dropdown'}, class: 'btn btn-mini dropdown-toggle' do
                  span.caret
                ul.dropdown
                  - if backer.confirmed?
                    li= link_to t('admin.backers.index.unconfirm_backer'), pendent_admin_backer_path(backer, local_params: params), method: :put
                  - else
                    li= link_to t('admin.backers.index.confirm_backer'), confirm_admin_backer_path(backer, local_params: params), method: :put
                  - if backer.requested_refund? or backer.confirmed?
                    - if backer.refund_path
                      li= link_to t('admin.backers.index.send_refund_request_backer'), backer.refund_path, method: :post
                    li= link_to t('admin.backers.index.refund_backer'), refund_admin_backer_path(backer, local_params: params), method: :put
                  li= link_to t('admin.backers.index.refund_and_hide'), hide_admin_backer_path(backer, local_params: params), method: :put
                  li= link_to t('admin.backers.index.cancel'), cancel_admin_backer_path(backer, local_params: params), method: :put
                  li= link_to t('admin.backers.index.push_to_trash'), push_to_trash_admin_backer_path(backer, local_params: params), method: :put
= paginate @backers
.clearfix
= render 'shared/footer'
