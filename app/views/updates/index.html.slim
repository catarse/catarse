- if can? :update, @project
  .bootstrap-form
    = semantic_form_for [@project, Update.new(user_id: current_user.id)] do |form|
      = form.inputs do
        = form.input :title, as: :string, label: t('projects.project_updates.title')
        = form.input :comment, as: :text, label: t('projects.project_updates.comment'), input_html: {rows: 10}
        .bootstrap-twitter
          .alert.alert-info
            p Lembrando que todo post de novidade vai diretamente para o email de seus apoiadores.
            | Por isso, revise bem seu texto antes de enviá-lo.
        .tips
          h3 Dicas de Formatação
          = image_tag "catarse/icon_media.png"
          p Se você colar a url de uma imagem ou de um vídeo do vimeo ou do youtube, eles irão aparecer na descrição da ideia. experimente!
          = image_tag "catarse/icon_url.png"
          p Ao colar uma url qualquer, ela virará um link. Por exemplo, http://meulink.com virará <a href="http://www.meulink.com.br">http://www.meulink.com.br</a>
          = image_tag "catarse/icon_linktext.png"
          p Se você quiser colocar um texto no link, basta usar o seguinte formato: "texto que você quer":http://sua.url. Por exemplo, 'meu link':http://meulink.com virará <a href="http://www.meulink.com.br">meu link</a>.
          = image_tag "catarse/icon_bold.png"
          p
            |Você pode usar negrito adicionando dois asteriscos (**) antes e depois do texto que você quer formatar. Por exemplo, **meu texto em negrito** irá aparecer como
            strong meu texto em negrito
            |.
          = image_tag "catarse/icon_italic.png"
          p
            |Você pode usar itálico adicionando um underline (_) antes e depois do texto que você quer formatar. Por exemplo, _meu texto em itálico_ irá aparecer como
            i meu texto em itálico
            |.
      = form.actions do
        .bootstrap-twitter
          = form.submit t('projects.project_updates.submit'), class: "btn", id: "update_submit"
          .loading_updates.hide= image_tag "loading.gif"

.updates_wrapper
  .media_content_update
    - if @project.updates.empty?
      em = t('projects.project_updates.empty')
    - else
      ul.collection_list
        - for update in @project.updates.includes(:project).order('created_at DESC')
          li
            .flag
            .time= l(update.created_at, format: :updates)
            .clearfix
            h3= link_to "#updates/#{update.id}", id: "updates/#{update.id}" do
              = update.title
            .comment= raw(update.comment_html)
            .midia
              .social
                .update_share
                  - url = project_by_slug_url(@project.permalink, update_id: update.id, locale: I18n.locale)
                  .twitter_share= render_twitter text: "#{update.title}", url: url
                  .facebook_share= render_facebook_like href: url, width: '360'
            - if can? :manage, update
              = link_to t('projects.project_updates.destroy'), project_update_path(project_id: @project.id, id: update.id), confirm: t('projects.project_updates.destroy_confirmation'), remote: true, method: :delete, class: 'destroy_update'
              .deleting_update.hide= image_tag "loading.gif"

