= javascript_include_tag "//www.google.com/jsapi", "chartkick"

= content_for :meta_tags do
  - if ['online', 'waiting_funds', 'successful'].include? @project.state
    meta name="robots" content="index, follow"
  - else
    meta name="robots" content="noindex, nofollow"

  - if @post
    meta name="description" content=@post.title
    meta property="og:title" content=@post.title
    meta property="og:description" content=@post.comment
    meta property="og:url" content=project_by_slug_url(@project.permalink, project_post_id: @post.id, locale: I18n.locale, ref: 'facebook')
  - else
    meta name="description" content=@project.headline
    meta property="og:title" content=@project.name
    meta property="og:description" content=@project.headline
    meta property="og:url" content=project_by_slug_url(@project.permalink, locale: I18n.locale, ref: 'facebook')
  meta property="og:type" content='cause'
  meta property="og:image" content=@project.display_image('project_thumb_facebook')
  meta property="og:site_name" content=CatarseSettings[:company_name]
  meta property="fb:admins" content="#{fb_admins}"
  
#page_content
  .container

    = render @project.state_warning_template

    #project_description
    .project_image
      = image_tag @project.display_image('project_thumb_small')
    .section_header
      h1= @project.name
      h4
        = t('.project_header.without_city')
        |&nbsp;
        = link_to(@project.category, explore_path(anchor: "by_category_id/#{@project.category_id}"))
        |&nbsp;
        = t('projects.index.box.by')
        |&nbsp;
        = link_to(@project.user.display_name, user_path(@project.user))
        |&nbsp;
        - @project.channels.each do |c|
          = link_to(c.name, root_url(subdomain: c.permalink), class: 'project-channel')
    .tab_container
      nav#project_menu
        = link_to '#about', 'id' => 'about_link', 'class' => 'selected', 'data-target' => '#project_about.content' do
          = t('.menu.about')
        = link_to '#posts', 'id' => 'posts_link', 'data-target' => '#project_posts' do
          = t('.menu.posts')
          span.count=" (#{@posts_count})"
        = link_to '#contributions', 'id' => 'contributions_link', 'data-target' => '#project_contributions' do
          = t('.menu.contributions')
          span.count=" (#{@project.total_contributions})"
        = link_to '#comments', 'id' => 'comments_link', 'data-target' => '#project_comments' do
          = t('.menu.comments')
          | &nbsp; (
          / we need to remove the locale from the url
          fb:comments-count href=controller.fb_comments_link
          | )
        - if policy(@project).update?
          = link_to '#edit', 'id' => 'edit_link', 'data-target' => '#project_edit' do
            = t('.menu.edit')
          = link_to '#reports', 'id' => 'reports_link', 'data-target' => '#project_reports' do
            = t('.menu.reports')
          = link_to '#metrics', id: 'metrics_link', data: {target: '#project_metrics'} do
            = t('.menu.metrics')
    .main
      #project_content
        - if policy(@project).update?
          #project_reports.content.hide
            = render 'project_reports'
          #project_edit.content.hide
            = render 'project_edit'

        #project_posts.content.hide[data-path=project_posts_path(project_id: @project.id)]
          - if policy(@project).update?
            = render template: 'projects/posts/new'
          .results data-skiptab=""
          .clearfix
          #posts-loading.loading= image_tag "loading.gif"
        #project_contributions.content.hide[data-path=project_contributions_path(project_id: @project.id)]
          - if policy(@project).update?
            = radio_button_tag(:contribution_state, "available_to_count", checked: true)
            = label_tag(:contribution_state, t('.contribution_states.confirmed'))
            = radio_button_tag(:contribution_state, "waiting_confirmation")
            = label_tag(:contribution_state, t('.contributions_states.pending'))
          .results data-skiptab=""
          .clearfix
          #contributions-loading.loading= image_tag "loading.gif"
        #project_comments.content.hide
        #project_about.content= render 'project_about'
        #project_metrics.content.hide[data-path=metrics_project_path(id: @project.id)]
          .results
          .clearfix
          #metrics-loading.loading= image_tag "loading.gif"

      .clearfix
    .sidebar
      .info
        #statistics
          .statistics
            .item.contributions
              p= @project.total_contributions
              em= t('.sidebar.contributions')
            .item.goal
              p= @project.display_pledged
              em= t('.sidebar.goal', total: @project.display_goal).html_safe
            .item.time
              - if @project.draft? || @project.rejected?
                p= @project.online_days
                em #{@project.online_days} #{pluralize_without_number(@project.online_days, I18n.t('datetime.prompts.day').downcase)} #{pluralize_without_number(@project.online_days, t('remaining_singular'), t('remaining_plural'))}
              - else
                p= @project.remaining_days
                em #{@project.time_to_go[:unit].capitalize} #{pluralize_without_number(@project.time_to_go[:time], t('remaining_singular'), t('remaining_plural'))}

          #condition[class="#{@project.display_status}"]
            p
              = t(".contribute_project.display_status.#{@project.display_status}", goal: @project.display_goal, date: @project.display_expires_at)
          - if @project.accept_contributions?
            #pledge
              = form_tag(new_project_contribution_path(@project), method: :get, id: 'contribute_project_form') do
                fieldset
                  = submit_tag t('.contribute_project.submit'), disabled: (not @project.online?)
        #creator_profile
          h3= t('.project_by')
          .avatar = @project.user.display_image_html width: 80, height: 80
          .personal_info
            p.name
             = link_to @project.user.display_name, user_path(@project.user)
            #bio
              p= @project.user.bio
          #city
            p.contribution= t('.count_contributed_projects', total: @project.user.total_contributed_projects)
            p.city
              | #{@project.user.address_city}
        .user_social
          ul
            - if @project.user.facebook_link.present?
              li
                = link_to "Perfil no facebook", @project.user.facebook_link, target: '_blank', class: 'facebook'
            - if @project.user.twitter_link
              li
                = link_to "Perfil no twitter", @project.user.twitter_link, target: '_blank', class: 'twitter'
            - if @project.user.email
              li
                = mail_to @project.user.email, @project.user.email, target: '_blank', class: 'email'
            - if @project.user.other_link
              li.other
                = link_to @project.user.other_link, @project.user.other_link, target: '_blank'

        .clearfix
        - if policy(@project).update?
          .bootstrap-twitter.bootstrap-form
            .alert.alert-info
              h4.alert-header= t('.no_rewards_warning_title')
              p style="margin:0; padding:0;"
                = t('.no_rewards_warning')
              br/
              .new_reward_content.hide
                = image_tag 'loading.gif'

            .clearfix
            = link_to t('.menu.add_reward'), 'javascript:void(0);', data: {target: '.new_reward_content', path: new_project_reward_path(@project)}, class: 'btn btn-success pull-right show_reward_form'
            .clearfix

            br/
            /.skull-modal.new_reward_content.hide
              .skull-modal-header
                h3= t('projects.rewards.new_reward')
                a class='skull-modal-close' href='javascript:void(0);' &times;
              .skull-modal-body
                = image_tag 'loading.gif'
        #rewards[data-can_update="#{policy(@project).update?}" data-index_path=project_rewards_path(@project)]
          .reward-loader= image_tag 'loading.gif'
        .funding_period_title
          = t('.funding_period')
        .funding_period
          = "#{@project.display_online_date} - #{@project.display_expires_at} (#{t('datetime.distance_in_words.x_days', count: @project.online_days)})"

    .clearfix
