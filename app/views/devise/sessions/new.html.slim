= content_for :title do 
  = t('.site_title')

#page_content
  .container
    .form_login.bootstrap-form.new_session[class="#{('actived' unless params[:active_register])}"]
      .content_form
        h1=t('.login_title')
        h3=t('.login_subtitle')
        = form_for(resource, :as => resource_name, :url => session_path(resource_name), :html => {:class => 'login_with_email_form'}) do |f|
          p.input
            = f.label :email
            = f.text_field :email
          p.input
            = f.label :password
            = f.password_field :password
          p.input.check
            = f.check_box :remember_me
            = f.label :remember_me, t('layouts.login.remember_me')
          p.action
            .bootstrap-twitter
              = f.submit t('.submit'), class: 'btn', id: 'user_submit'
          p.forgot_link
            = link_to t('devise.links.forgot_password'), new_password_path(resource_name)
    .form_login.bootstrap-form.new_registration[class="#{('actived' if params[:active_register])}"]
      .content_form
        h1=t('.register_title')
        h3=t('.register_subtitle')
        - resource.newsletter = true
        = form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => {:class => 'login_with_email_form'}) do |f|
          = devise_error_messages!
          p.input
            = f.label :name
            = f.text_field :name
          p.input
            = f.label :email
            = f.text_field :email
          p.input
            = f.label :password
            = f.password_field :password
          p.input
            = f.label :password_confirmation
            = f.password_field :password_confirmation
          p.input.check
            = f.check_box :newsletter
            = f.label :newsletter, t('users.current_user_fields.newsletter')
          p.action
            .bootstrap-twitter
              = f.submit t('registrations.new.submit'), class: 'btn', id: 'user_submit'
    .login_with_social
      .content_form
        h1=t('.with_facebook')
        h3=t('.with_facebook_subtitle')
        = link_to t('layouts.login.login_with_facebook'), user_omniauth_authorize_path(provider: 'facebook', locale: nil), :class => 'facebook_start'
        /!= link_to t('layouts.login.login_with_facebook'), '/auth/facebook', :class => 'facebook_start'
        
      .another_social
        h1=t('.with_another_social')
        h3=t('.with_another_social_subtitle')
        = link_to image_tag('auth/google_128.png', :title => 'Google'), user_omniauth_authorize_path(provider: 'google_oauth2', locale: nil), :class => 'provider first'
        = link_to image_tag('auth/yahoo_128.png', :title => 'Yahoo'), '/auth/yahoo', :class => 'provider'

      .stripe_login
        h1=t('.with_stripe')
        h3=t('.with_stripe_subtitle')
        = link_to image_tag('catarse_stripe/auth/stripe_blue.png', :title => 'Stripe payments'), '/auth/stripe_connect', :class => 'provider'
    .clearfix
