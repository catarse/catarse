= render 'shared/header_bootstrap_v1'
.row.admin.use-sort
  h1
    = @title = t('channels.admin.management.title')
    ' :
    = @total_projects
    '
    = t('channels.admin.management.total')

  h3 = t('channels.admin.filter.title')
  = simple_form_for '', url: admin_projects_path, method: :get do |form|
    .row
      .large-2.columns
        = form.input :order_by, as: :hidden, input_html: {value: params[:order_by]}
        = form.input :by_id, as: :integer, label: t('channels.admin.filter.by_id'), input_html: {value: params[:by_id]}
      .large-3.columns
        = form.input :pg_search, as: :string, label: t('channels.admin.filter.pg_search'), input_html: {value: params[:pg_search]}
      .large-3.columns
        = form.input :user_name_contains, as: :string, label: t('channels.admin.filter.user_name_contains'), input_html: {value: params[:user_name_contains]}
      .large-2.columns
        = form.input :by_user_email, as: :string, label: t('.by_user_email'), input_html: {value: params[:by_user_email]}
      .large-2.columns
        = form.input :with_state, collection: Project.state_names, label: t('channels.admin.filter.with_state'), as: :select, selected: params[:with_state], include_blank: true

    .row
      - [:between_created_at, :between_expires_at, :between_online_date, :between_updated_at, :goal_between].each_with_index do |between_field, index|
        - mask = (between_field == :goal_between ? '' : '99/99/9999')
        - if index % 3 == 0
          .row
        .large-2.columns
          = form.input "#{between_field}[start_at]", as: :string, label: t(".#{between_field}"), input_html: {value: params[between_field] && params[between_field][:start_at], data: { mask: mask } }
        .large-2.no-label.columns
          = form.input "#{between_field}[ends_at]", as: :string, label: false, input_html: { value: params[between_field] && params[between_field][:ends_at], data: { mask: mask } }
      .large-2.columns
        = form.input :by_channel, as: :select, collection: Channel.all, selected: params[:by_channel], include_blank: true

      .large-2.no-label.columns
        = form.button :submit, t('channels.admin.filter.submit'), class: 'button medium negative'

    .row
      .large-2.large-offset-10.columns
        p.filtered-number = @scoped_projects.count(:all)
        p.filtered-number-label
          = pluralize_without_number(@scoped_projects.count(:all), t('project_singular'), t('project_plural'))
          '
          = pluralize_without_number @scoped_projects.count(:all), t('found_singular'), t('found_plural')


  = paginate @projects
  - if @scoped_projects.count(:all) < 1
    = t('.no_projects')
  - else
    table.admin-projects-table.no-bottom
      thead
        tr
          th.large-1.columns= t('channels.admin.table.name')
          th.large-1.columns= t('.pagarme')
          th.large-1.columns= t('channels.admin.table.category')
          th.large-1.columns= t('channels.admin.table.user_id')
          th.large-1.columns
            a data-sort="goal" href='#'= t('.goal')
            span.sort-order
          th.large-1.columns
            a data-sort="project_totals.progress" href='#'= t('.pledged')
            span.sort-order
          th.large-1.columns
            a data-sort="project_totals.total_contributions" href='#'= t('.total_contributions')
            span.sort-order
          th.large-1.columns= t('channels.admin.table.recommended')
          th.large-1.columns
            a data-sort="online_date" href='#'= t('.online_date')
            span.sort-order
          th.large-1.columns
            a data-sort="projects.expires_at" href='#'= t('.expires_at')
            span.sort-order
          th.large-1.columns
            a data-sort="updated_at" href='#'= t('.last_modification')
            span.sort-order
          th.large-1.columns= t('channels.admin.table.state')
          th.large-1.columns
      tbody
        - @projects.includes(:category).each do |project|
          tr id=project.id class=cycle("even", "odd")
            td.large-1.columns= link_to project.name, project_by_slug_path(permalink: project.permalink)
            td.large-1.columns= (project.using_pagarme? ? t('yes') : t('no'))
            td.large-1.columns= project.category
            td.large-1.columns= best_in_place [:admin, project], :user_id, method: :put, type: :input
            td.large-1.columns= best_in_place [:admin, project], :goal, method: :put, type: :input, display_as: :display_goal
            td.large-1.columns= "#{project.display_pledged} (#{project.progress}%)"
            td.large-1.columns= project.total_contributions
            td.large-1.columns= best_in_place [:admin, project], :recommended, method: :put, type: :checkbox, collection: [t('no'), t('yes')]
            td.large-1.columns= project.online_date.strftime('%d/%m/%Y') if project.online_date
            td.large-1.columns= project.display_expires_at
            td.large-1.columns= project.updated_at.strftime('%d/%m/%Y')
            td.large-1.columns.project-events-dropdown
              - if project.online?
                span.label.label-online= project.state
              - elsif project.successful?
                span.label.label-success= project.state
              - elsif project.failed? or project.rejected?
                span.label.label-important= project.state
              - elsif project.waiting_funds?
                span.label.label-warning= project.state
              - else
                span.label= project.state
              .btn-group
                = link_to 'javascript:void(0);', data: {toggle: 'dropdown'}, class: 'btn btn-mini dropdown-toggle' do
                  span.caret
              ul.dropdown
                - if project.can_approve?
                  li
                    = link_to approve_admin_project_path(project), method: :put do
                      i.icon-ok
                      = t('channels.admin.table.approve')

                - if project.can_reject?
                  li
                    = link_to reject_admin_project_path(project), method: :put  do
                      i.icon-ban-circle
                      = t('channels.admin.table.reject')

                - if project.can_push_to_draft?
                  li
                    = link_to  push_to_draft_admin_project_path(project), method: :put  do
                      = t('channels.admin.table.send_to_draft')
                - if project.can_push_to_trash?
                  li
                    = link_to  push_to_trash_admin_project_path(project), data:{ confirm: t('channels.admin.table.confirmation')}, method: :put  do
                      = t('channels.admin.table.send_to_trash')

  = paginate @projects
= render 'shared/footer_bootstrap_v1'
